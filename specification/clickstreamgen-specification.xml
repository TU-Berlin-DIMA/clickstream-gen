<?xml version="1.0" encoding="UTF-8"?>
<generator_specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.dima.tu-berlin.de/myriad/specification" xsi:schemaLocation="http://www.dima.tu-berlin.de/myriad/specification specification.xsd">

  <!-- catalog imports -->
  <imports>
    <import path="catalog/census.us.xml" namespace="census.us" />
  </imports>

  <!-- configurable parameters -->
  <parameters>
    <!-- user parameters -->
    <parameter key="user.output_file">user.json</parameter>
    <!-- user_connections parameters -->
    <parameter key="user_connections.output_file">user_connections.json</parameter>
    <parameter key="user_connections.connections_cardinality">100</parameter>
    <parameter key="user_connections.cluster_size">200</parameter>
    <parameter key="user_connections.cluster_connections_factor">0.8</parameter>
  </parameters>

  <!-- function configuration -->
  <functions>
    <function key="Pr[in_cluster_connection]" type="pareto_probability">
      <argument key="x_min">1</argument>
      <argument key="alpha">1</argument>
    </function>
  </functions>

  <!-- enumeration types -->
  <enum_sets>
    <enum_set key="Gender">
      <item value="Male" />
      <item value="Female" />
    </enum_set>
    <enum_set key="Locale">
      <item value="US" />
      <item value="CA" />
    </enum_set>
  </enum_sets>

  <record_sequences>
    <!-- users -->
    <random_sequence key="user">
      <record_type>
        <field name="id" type="I64u" />
        <field name="locale" type="Locale" />
        <field name="gender" type="Gender" />
        <field name="first_name" type="String" />
        <field name="last_name" type="String" />
      </record_type>
      <cardinality_estimator type="linear_scale_estimator">
        <argument key="base_cardinality" type="I64u" value="%user_connections.sequence.base_cardinality%" />
      </cardinality_estimator>
      <hydrators>
        <hydrator key="id_hydrator" type="randomized_sequence_hydrator">
          <argument key="field" type="field_ref" ref="id" />
          <argument key="cardinality" type="long" value="%user.sequence.cardinality%" />
        </hydrator>
        <hydrator key="locale_hydrator" type="enum_set_hydrator">
          <argument key="field" type="field_ref" ref="locale" />
          <argument key="probability" type="function_ref" ref="Pr[locale]" />
        </hydrator>
        <hydrator key="gender_hydrator" type="enum_set_hydrator">
          <argument key="field" type="field_ref" ref="gender" />
          <argument key="probability" type="function_ref" ref="census.us:Pr[gender]" />
        </hydrator>
        <hydrator key="first_name_hydrator" type="conditional_hydrator">
          <argument key="field" type="field_ref" ref="first_name" />
          <argument key="condition_field" type="field_ref" ref="gender" />
          <argument key="choices" type="map">
            <argument key="Male" type="hydrator_ref" ref="male_name_hydrator" />
            <argument key="Female" type="hydrator_ref" ref="female_name_hydrator" />
          </argument>
        </hydrator>
        <hydrator key="male_name_hydrator" type="static_set_hydrator">
          <argument key="field" type="field_ref" ref="first_name" />
          <argument key="set" type="set_ref" ref="male_names" />
          <argument key="probability" type="function_ref" ref="census.us:Pr[male_names]" />
        </hydrator>
        <hydrator key="female_name_hydrator" type="static_set_hydrator">
          <argument key="field" type="field_ref" ref="first_name" />
          <argument key="set" type="set_ref" ref="female_names" />
          <argument key="probability" type="function_ref" ref="census.us:Pr[female_names]" />
        </hydrator>
      </hydrators>
      <hydration_plan>
        <hydrator_ref ref="id_hydrator" />
        <hydrator_ref ref="gender_hydrator" />
        <hydrator_ref ref="first_name_hydrator" />
      </hydration_plan>
      <generator_tasks>
        <generator_task key="user.generate" type="partitioned_iterator" />
      </generator_tasks>
    </random_sequence>

    <!-- user connections -->
    <random_sequence key="user_connections">
      <record_type>
        <field name="id" type="I64u" />
        <field name="cluster_id" type="I64u" />
        <field name="cluster_interval" type="Interval" />
        <field name="connections_count" type="vector[I64u]" />
        <field name="connections" type="vector[I64u]" />
      </record_type>
      <cardinality_estimator type="linear_scale_estimator">
        <argument key="base_cardinality" type="I64u" value="%user_connections.sequence.base_cardinality%" />
      </cardinality_estimator>
      <hydrators>
        <hydrator key="id_hydrator" type="randomized_sequence_hydrator">
          <argument key="field" type="field_ref" ref="id" />
          <argument key="cardinality" type="long" value="%user_connections.sequence.cardinality%" />
        </hydrator>
        <hydrator key="connections_count_hydrator" type="const_hydrator">
          <argument key="field" type="field_ref" ref="connections_count" />
          <argument key="const_value" type="I64u" value="%user_connections.connections_count%" />
        </hydrator>
        <hydrator key="cluster_id_hydrator" type="clustered_sequence_hydrator">
          <argument key="field" type="field_ref" ref="cluster_id" />
          <argument key="interval_field" type="field_ref" ref="cluster_interval" />
          <argument key="const_value" type="I16u" value="%user_connections.connections_count%" />
          <argument key="cardinality" type="I16u" value="${ %user_connections.sequence.cardinality% / %user_connections.cluster_size% }" />
          <argument key="probability" type="function_ref" ref="core:Pr[uniform]" />
        </hydrator>
        <hydrator key="connections_hydrator" type="repeated_hydrator">
          <argument key="field" type="field_ref" ref="connections" />
          <argument key="count_field" type="field_ref" ref="connections_count" />
          <argument key="inner_hydrator" type="hydrator_ref" />
        </hydrator>
        <hydrator key="connection_hydrator" type="clustered_reference_hydrator">
          <argument key="field" type="field_ref" ref="connections" />
          <argument key="restriction_interval_field" type="field_ref" ref="cluster_interval" />
          <argument key="probability" type="function_ref" ref="Pr[in_cluster_connection]" />
        </hydrator>
      </hydrators>
      <hydration_plan>
        <hydrator_ref ref="id_hydrator" />
        <hydrator_ref ref="cluster_id_hydrator" />
        <hydrator_ref ref="connections_count_hydrator" />
        <hydrator_ref ref="connections_hydrator" />
      </hydration_plan>
      <generator_tasks>
        <generator_task key="user_connections.generate" type="partitioned_iterator" />
      </generator_tasks>
    </random_sequence>
  </record_sequences>
</generator_specification>